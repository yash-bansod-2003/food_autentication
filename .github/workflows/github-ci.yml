name: GitHub Actions Demo
run-name: ${{ github.actor }} is running Food Authentication GitHub Actions ðŸš€

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main

jobs:
  build-setup:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "22.11.0"

      - name: Install dependencies
        run: npm install

      - name: Run ESLint
        run: npm run lint

      - name: Run Prettier for Code Formatting
        run: npm run format

      - name: Run Unit Tests And Collect Test Coverage (using Jest)
        run: npm test

      # - name: Upload Coverage to Coveralls
      #   uses: coverallsapp/github-action@v2
      #   with:
      #     github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Run Dependency Check (OWASP Dependency-Check)
        uses: dependency-check/Dependency-Check_Action@1.1.0
        id: dependencyCheck
        with:
          project: "Food"
          path: "."
          format: "ALL"

      - name: Build the Application
        run: npm run build

  code-review:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "22.11.0"

      - name: Install Dependencies
        run: npm install octokit @google/generative-ai dotenv

      - name: Get changes
        id: changes
        run: |
          git fetch --unshallow --quiet
          CHANGED_FILES=$(git diff --name-only ${{ github.event.before }} ${{ github.event.after }} | grep '\.ts$')
          echo "CHANGED_FILES=$CHANGED_FILES" >> $GITHUB_ENV
          echo "Changed files: $CHANGED_FILES"

      - name: Run code review
        run: node tools/review.js
        env:
          GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
          PR_NUMBER: ${{ github.event.pull_request.number }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_REPOSITORY: ${{ github.repository }}
          CHANGED_FILES: ${{ env.CHANGED_FILES }}

  # deploy:
  #   name: Deploy to Docker
  #   runs-on: ubuntu-latest
  #   needs: build-setup
  #   env:
  #     DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
  #     DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
  #     DOCKERIMAGE_NAME: $GITHUB_REPOSITORY
  #     DOCKERIMAGE_TAG: build-${{ github.run_number }}
  #   if: github.ref == 'refs/heads/main' && github.event_name == 'push'
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v3
  #     - name: Login to DockerHub
  #       uses: docker/login-action@v2
  #       with:
  #         username: ${{ env.DOCKERHUB_USERNAME }}
  #         password: ${{ env.DOCKERHUB_TOKEN }}
  #     - name: Build and push
  #       run: docker build -t ${{ env.DOCKERIMAGE_NAME }}:${{ env.DOCKERIMAGE_TAG }} -f docker/production/Dockerfile .
  #     - name: Push to DockerHub
  #       run: docker push ${{ env.DOCKERIMAGE_NAME }}:${{ env.DOCKERIMAGE_TAG }}
